import{_ as a,c as t,o as l,l as e,a as s}from"./chunks/framework.DDO5B0CJ.js";const o="/vitepress-java/assets/img_180.BHsjkZ-k.png",x=JSON.parse('{"title":"24-流控规则-流控效果","description":"","frontmatter":{},"headers":[],"relativePath":"Spring-Cloud-Alibaba/24.md","filePath":"Spring-Cloud-Alibaba/24.md"}'),i={name:"Spring-Cloud-Alibaba/24.md"},n=e("h1",{id:"_24-流控规则-流控效果",tabindex:"-1"},[s("24-流控规则-流控效果 "),e("a",{class:"header-anchor",href:"#_24-流控规则-流控效果","aria-label":'Permalink to "24-流控规则-流控效果"'},"​")],-1),r=e("ul",null,[e("li",null,"快速失败：当QPS超过阈值时，新的请求会被立即拒绝并抛出FlowException异常。是默认的处理方式"),e("li",null,"Warm Up：当QPS超过阈值时，请求被限流，请求量从阈值开始，以一个较慢的速率增加，直到增加到阈值，然后开始正常处理。"),e("li",null,"Rate Limiter：基于令牌桶算法，以固定的速率往桶里添加令牌，请求过来先从桶里获取令牌，只有拿到令牌的请求才能继续执行，否则会被限流。")],-1),c=e("p",null,[e("img",{src:o,alt:"img_180.png",loading:"lazy"})],-1),_=[n,r,c];function d(p,m,u,h,g,f){return l(),t("div",null,_)}const S=a(i,[["render",d]]);export{x as __pageData,S as default};
