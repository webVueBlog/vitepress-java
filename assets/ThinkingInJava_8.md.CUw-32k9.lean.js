import{_ as t,c as a,o as n,l as e,a as o}from"./chunks/framework.DDO5B0CJ.js";const x=JSON.parse('{"title":"第 8 章 对象的容纳","description":"","frontmatter":{},"headers":[],"relativePath":"ThinkingInJava/8.md","filePath":"ThinkingInJava/8.md"}'),s={name:"ThinkingInJava/8.md"},c=e("h1",{id:"第-8-章-对象的容纳",tabindex:"-1"},[o("第 8 章 对象的容纳 "),e("a",{class:"header-anchor",href:"#第-8-章-对象的容纳","aria-label":'Permalink to "第 8 章 对象的容纳"'},"​")],-1),r=e("p",null,"(1) 数组包含了对象的数字化索引。它容纳的是一种已知类型的对象，所以在查找一个对象时，不必对结果 进行造型处理。数组可以是多维的，而且能够容纳基本数据类型。但是，一旦把它创建好以后，大小便不能 变化了。",-1),i=e("p",null,"(2) Vector（矢量）也包含了对象的数字索引——可将数组和 Vector想象成随机访问集合。当我们加入更多 的元素时，Vector能够自动改变自身的大小。但 Vector只能容纳对象的句柄，所以它不可包含基本数据类 型；而且将一个对象句柄从集合中取出来的时候，必须对结果进行造型处理。",-1),_=e("p",null,"(3) Hashtable（散列表）属于Dictionary（字典）的一种类型，是一种将对象（而不是数字）同其他对象 关联到一起的方式。散列表也支持对对象的随机访问，事实上，它的整个设计方案都在突出访问的“高速 度”。",-1),l=e("p",null,"(4) Stack（堆栈）是一种“后入先出”（LIFO ）的队列。",-1),d=[c,r,i,_,l];function h(p,m,f,u,k,V){return n(),a("div",null,d)}const g=t(s,[["render",h]]);export{x as __pageData,g as default};
