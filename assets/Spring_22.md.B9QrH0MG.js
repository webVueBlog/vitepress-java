import{_ as e,c as o,o as a,a8 as i}from"./chunks/framework.CbRyzB36.js";const m=JSON.parse('{"title":"解释Spring中bean的生命周期","description":"","frontmatter":{},"headers":[],"relativePath":"Spring/22.md","filePath":"Spring/22.md"}'),n={name:"Spring/22.md"},t=i('<h1 id="解释spring中bean的生命周期" tabindex="-1">解释Spring中bean的生命周期 <a class="header-anchor" href="#解释spring中bean的生命周期" aria-label="Permalink to &quot;解释Spring中bean的生命周期&quot;">​</a></h1><p>Bean生命周期：<code>指定的就是Bean从创建到销毁的整个过程</code>: 分4大步：</p><p>实例化</p><ol><li>通过反射去推断构造函数进行实例化</li><li>实例工厂、 静态工厂</li></ol><p>依赖注入（<code>DI</code>）</p><p>解析自动装配<code>（byname bytype constractor none @Autowired）</code></p><p>初始化</p><ol><li><code>调用很多Aware回调方法</code></li><li><code>调用BeanPostProcessor</code>.<code>postProcessBeforeInitialization</code></li><li>调用生命周期回调初始化方法</li><li><code>调用BeanPostProcessor</code>.<code>postProcessAfterInitialization</code>, 如果bean实现aop则会在这里创建动态代理</li></ol><p>销毁</p><ol><li>在spring容器关闭的时候进行调用</li><li>调用生命周期回调销毁方法</li></ol><p>这4大步组成了Bean的生命周期</p>',11),r=[t];function c(s,p,l,d,_,f){return a(),o("div",null,r)}const P=e(n,[["render",c]]);export{m as __pageData,P as default};
