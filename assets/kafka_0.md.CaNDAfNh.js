import{_ as a,c as i,o as l,a8 as t}from"./chunks/framework.DDO5B0CJ.js";const e="/vitepress-java/assets/img_228.DPDrRAt-.png",s="/vitepress-java/assets/img_229.DHqtYH4Z.png",r="/vitepress-java/assets/img_230.BKh6vsxt.png",o="/vitepress-java/assets/img_231.D_wxbB4c.png",k="/vitepress-java/assets/img_232.D3fieeOI.png",n="/vitepress-java/assets/img_233.CMcmkwug.png",p="/vitepress-java/assets/img_234.D_6C20j_.png",c="/vitepress-java/assets/img_235.Bqc4F96a.png",g="/vitepress-java/assets/img_236.Cd45U-av.png",_="/vitepress-java/assets/img_237.HbwtxAEP.png",f="/vitepress-java/assets/img_238.C6puAYX8.png",m="/vitepress-java/assets/img_239.Diz_4Lzt.png",u="/vitepress-java/assets/img_240.CnvZO0mg.png",K=JSON.parse('{"title":"从0基础到成为Kafka高手","description":"","frontmatter":{},"headers":[],"relativePath":"kafka/0.md","filePath":"kafka/0.md"}'),d={name:"kafka/0.md"},v=t('<h1 id="从0基础到成为kafka高手" tabindex="-1">从0基础到成为Kafka高手 <a class="header-anchor" href="#从0基础到成为kafka高手" aria-label="Permalink to &quot;从0基础到成为Kafka高手&quot;">​</a></h1><blockquote><p>环境搭建和集群规划</p></blockquote><ol><li>为什么会诞生消息系统，kafka，Pulsar，RocketMQ，RabbitMQ，ActiveMQ，ZeroMQ，Kafka和RabbitMQ的区别，Kafka和RabbitMQ的对比，Kafka和RabbitMQ的适用场景，Kafka和RabbitMQ的优缺点，Kafka和RabbitMQ的性能对比，Kafka和RabbitMQ的架构对比，Kafka和RabbitMQ的可靠性对比</li><li>在当前的大数据架构中（离线数仓，实时数仓以及湖仓一体化架构），kafka扮演什么样的角色</li><li>kafka有哪些核心组件，kafka的总体工作流程是什么样的</li><li>如何规划配置高吞吐量高并发的kafka集群</li></ol><h2 id="生产者" tabindex="-1">生产者 <a class="header-anchor" href="#生产者" aria-label="Permalink to &quot;生产者&quot;">​</a></h2><ol><li>开发kafka生产者客户端程序和重要参数讲解： <ul><li>KafkaProducer：为什么在bootstrap.servers中配置一个Broker地址，就能连接到kafka集群？</li><li>KafkaProducer：生产者发送消息的流程是什么？</li><li>KafkaProducer：如果目标Topic并不存储在bootstrap.servers配置的地址所指向的Broker中，为什么能成功发送消息？</li></ul></li><li>kafka生产者的三种发送消息方式（发送即忘，同步，异步） <ul><li>什么是不可重试异常，什么是可重试异常，该如何捕获这些异常以保证数据不丢失？</li><li>消息累加器的批量发送的机制是什么？如何提高发送吞吐量？</li><li>如何提高fire-andforget的发送消息成功率</li><li>为什么说fire-andforget的性能高，但可靠性差</li><li>kafka中有真正的同步发送接口吗？如何实现同步发送消息</li><li>如何判断同步发送消息成功与否？为什么在生产环境中推荐使用异步发送消息模式</li><li>在异步发送消息时，使用回调函数Callback()有什么注意事项</li></ul></li><li>kafka生产者的序列化和拦截器工作原理 <ul><li>kafka生产者序列化器的作用是什么？有哪些常用的序列化器？</li><li>如何自定义序列化器</li><li>你有没有定制开发过序列化器，在哪些常见需要自定义序列化器</li><li>你有没有自己定制开发过生产者拦截器，在哪些场景需要配置生产者拦截器</li></ul></li><li>kafka生产者拉取管理元数据的全流程 <ul><li>kafka生产者会在哪些场景中主动拉取元数据信息</li><li>当Topic的分区重新选主或增加Partition时，如何刷新元数据</li><li>kafka消费者在哪些场景下会更新元数据信息</li></ul></li><li>kafka生产者的内置路由器以及自定义路由方式 <ul><li>kafkaProducer中有哪几种路由策略，如果想顺序发送消息，需要使用哪种路由策略</li><li>粘性路由策略相比轮询策略有哪些优势？为什么提升发送消息的吞吐量</li><li>为什么要自定义路由策略，请举例说明</li></ul></li><li>Producer的缓冲区内部数据结构是什么样的 <ul><li>消息累加器（RecordAccumulator)的内部结构是什么样的，池化内存和非池化内存如何转换，为什么可以避免JVM GC</li><li>如何优化设置发送缓冲区，batch.size和linger.ms等参数以提升发送消息的吞吐量</li></ul></li><li>kafka的Sender线程如何将缓冲区的数据发送到Broker <ul><li>ProducerBatch中的消息满足什么条件算是准备好，Sender子线程怎么报消息发送给Broker集群的</li><li>如何根据业务场景对消息大小以及请求超时进行合理的设置</li></ul></li></ol><h2 id="中级原理" tabindex="-1">中级原理 <a class="header-anchor" href="#中级原理" aria-label="Permalink to &quot;中级原理&quot;">​</a></h2><ol><li>kafka如何借助NetworkClient将消息发送到Broker端 <ul><li>在 Apache Storm 或者 RocketMQ中，是通过一个名为 Netty 的网络框架实现IO多路复用的，kafka为什么要自己使用 Java NIO 来实现IO多路复用而不直接依赖 Netty 实现呢？</li><li>请描述 Java NIO 的执行原理，在kafka中为什么要使用IO多路复用，而不使用专用线程模型</li><li>NetworkClient中的Selector是什么，它的作用是什么</li><li>NetworkClient中的Selector和Java NIO中的Selector有什么区别</li><li>NetworkClient类如何维护与Broker节点间的Socket连接</li><li>InFlightRequests的发送原理是什么，生产者幂等性有哪些优势和不足，当max.in.flight.requests.per.connection &gt; 1时，如何保证分区内消息有序</li></ul></li><li>kafkaProducer的整体架构和消息发送原理 <ul><li>生产者客户端如何向 Broker 端循环发送数据请求，该如何优化设置发送和接收缓冲区大小</li><li>如何将消息写入PageCache中，并最终将消息flush到TopicPartition日志中</li><li>kafka集群中的炼狱（purgatory)在将日志复制到其他Broker节点时，起到了哪些作用</li></ul></li><li>如何发送，存储以及消费大于1MB的消息，有哪几种解决方案 <ul><li>如果想传输1GB以上的大文件，有哪些方案？在什么时候会采用Kafka传输</li><li>如何根据业务场景对消息大小以及请求超时，设置成一个合理的参数值</li></ul></li><li>kafka生产者如何配置acks和最小同步副本参数以确保发送消息不丢失 <ul><li>kafka在发送消息时，acks参数到底是干嘛的，acks等于0, 1, -1有哪些优势和不足</li><li>kafka在发送消息时，该如何设置最小同步副本数以确保数据不丢失</li><li>kafka的分区同步副本机制是什么样的</li></ul></li><li>kafka的幂等性能机制如何确保消息不重复，结合key使用保证分区内消息的有序性 <ul><li>针对瞬间异常的消息重试参数，需要考虑哪些因素</li></ul></li><li>kafka如何借助事务特性实现数据精准一次性发送到Broker端 <ul><li>如果要实现跨会话，跨分区的数据一致性，该如何实现</li><li>kafka开启事务以后，性能下降严重吗？你做过哪些测试？</li></ul></li></ol><h2 id="高吞吐篇" tabindex="-1">高吞吐篇 <a class="header-anchor" href="#高吞吐篇" aria-label="Permalink to &quot;高吞吐篇&quot;">​</a></h2><ol><li>Producer发送消息为什么会延迟，Sticky分区策略是什么？能解决发送消息延迟吗？ <ul><li>请问linger.ms=0就表示每生成一条消息就立刻发送到Broker端吗？</li><li>做过RoundRobin和Sticky两种路由策略的性能测试吗？Sticky路由策略有哪些优势，提升了多少性能？</li></ul></li><li>优化调整哪些参数可以提升kafka发送消息的吞吐量并降低延迟 <ul><li>优化调整哪些参数可以提升kafka发送消息的吞吐量并降低延迟</li></ul></li><li>kafka在哪些场景下会出现发送消息阻塞，都有哪些解决方案</li><li>kafka如何优化发送和消息消息的延迟性，有哪些延迟时间是避免不了的</li><li>kafka在发送消息时如何借助PageCache，从而使kafka具有吞吐量和低延迟</li><li>kafka在发送消息时如何利用顺序写机制向硬盘上高速写数据</li></ol><ul><li>什么是顺序写，追加写就是顺序写吗？顺序写就一定保证所有的数据都挨着吗？</li><li>顺序写为什么会比随机写快？kafka是如何利用顺序写提高吞吐量的</li><li>还能想起磁盘的物理结构和读写规则吗？有没有必要将HDD硬盘替换成SSD硬盘</li></ul><p><img src="'+e+'" alt="img_228.png" loading="lazy"></p><p><img src="'+s+'" alt="img_229.png" loading="lazy"></p><p><img src="'+r+'" alt="img_230.png" loading="lazy"></p><p><img src="'+o+'" alt="img_231.png" loading="lazy"></p><p><img src="'+k+'" alt="img_232.png" loading="lazy"></p><p><img src="'+n+'" alt="img_233.png" loading="lazy"></p><p><img src="'+p+'" alt="img_234.png" loading="lazy"></p><p><img src="'+c+'" alt="img_235.png" loading="lazy"></p><p><img src="'+g+'" alt="img_236.png" loading="lazy"></p><p><img src="'+_+'" alt="img_237.png" loading="lazy"></p><p><img src="'+f+'" alt="img_238.png" loading="lazy"></p><p><img src="'+m+'" alt="img_239.png" loading="lazy"></p><p><img src="'+u+'" alt="img_240.png" loading="lazy"></p>',23),h=[v];function b(P,y,B,S,z,R){return l(),i("div",null,h)}const M=a(d,[["render",b]]);export{K as __pageData,M as default};
