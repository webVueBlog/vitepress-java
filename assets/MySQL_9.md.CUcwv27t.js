import{_ as s,c as a,o as t,a8 as p}from"./chunks/framework.DDO5B0CJ.js";const i="/vitepress-java/assets/img_36.UiHZgO5Q.png",e="/vitepress-java/assets/img_37.C0NheX1M.png",_="/vitepress-java/assets/img_38.CX4uICoT.png",g="/vitepress-java/assets/img_39.Bb7ObLsu.png",n="/vitepress-java/assets/img_40.BkluXFPb.png",o="/vitepress-java/assets/img_41.BY0c7KIa.png",m="/vitepress-java/assets/img_42.CXHmqKey.png",r="/vitepress-java/assets/img_43.lvE2lT3u.png",l="/vitepress-java/assets/img_44.BQQxm32T.png",c="/vitepress-java/assets/img_45.BfAENFT9.png",d="/vitepress-java/assets/img_46.C99sdAkt.png",v="/vitepress-java/assets/img_47.DQSnTNqF.png",C=JSON.parse('{"title":"第 9 章 用正则表达式进行搜索","description":"","frontmatter":{},"headers":[],"relativePath":"MySQL/9.md","filePath":"MySQL/9.md"}'),y={name:"MySQL/9.md"},u=p('<h1 id="第-9-章-用正则表达式进行搜索" tabindex="-1">第 9 章 用正则表达式进行搜索 <a class="header-anchor" href="#第-9-章-用正则表达式进行搜索" aria-label="Permalink to &quot;第 9 章 用正则表达式进行搜索&quot;">​</a></h1><p><img src="'+i+'" alt="img_36.png" loading="lazy"></p><p>为什么要费力地使用正则表达式？在刚才的例子中，正则表达式确 实没有带来太多好处（可能还会降低性能）</p><p><img src="'+e+'" alt="img_37.png" loading="lazy"></p><p>这里使用了正则表达式.000。.是正则表达式语言中一个特殊 的字符。它表示匹配任意一个字符，因此，1000和2000都匹配 且返回。</p><p><img src="'+_+'" alt="img_38.png" loading="lazy"></p><blockquote><p>两个以上的OR条件 可以给出两个以上的OR条件。例如， &#39;1000 | 2000 | 3000&#39;将匹配1000或2000或3000。</p></blockquote><p><img src="'+g+'" alt="img_39.png" loading="lazy"></p><p><img src="'+n+'" alt="img_40.png" loading="lazy"></p><p><img src="'+o+'" alt="img_41.png" loading="lazy"></p><p><img src="'+m+'" alt="img_42.png" loading="lazy"></p><p><img src="'+r+'" alt="img_43.png" loading="lazy"></p><p>匹配多个实例</p><p><img src="'+l+'" alt="img_44.png" loading="lazy"></p><p><img src="'+c+'" alt="img_45.png" loading="lazy"></p><p>定位符</p><p>目前为止的所有例子都是匹配一个串中任意位置的文本。</p><p><img src="'+d+'" alt="img_46.png" loading="lazy"></p><p><img src="'+v+'" alt="img_47.png" loading="lazy"></p>',19),h=[u];function j(z,T,f,S,b,k){return t(),a("div",null,h)}const Q=s(y,[["render",j]]);export{C as __pageData,Q as default};
