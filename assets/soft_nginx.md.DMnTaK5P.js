import{_ as s,c as a,o as n,a8 as e}from"./chunks/framework.DDO5B0CJ.js";const m=JSON.parse('{"title":"nginx安装部署文档","description":"","frontmatter":{},"headers":[],"relativePath":"soft/nginx.md","filePath":"soft/nginx.md"}'),p={name:"soft/nginx.md"},l=e(`<h1 id="nginx安装部署文档" tabindex="-1">nginx安装部署文档 <a class="header-anchor" href="#nginx安装部署文档" aria-label="Permalink to &quot;nginx安装部署文档&quot;">​</a></h1><h2 id="_1安装部署" tabindex="-1">1安装部署 <a class="header-anchor" href="#_1安装部署" aria-label="Permalink to &quot;1安装部署&quot;">​</a></h2><h3 id="_1-1安装编译工具" tabindex="-1">1.1安装编译工具 <a class="header-anchor" href="#_1-1安装编译工具" aria-label="Permalink to &quot;1.1安装编译工具&quot;">​</a></h3><p>在 CentOS 上编译 Nginx 需要安装编译工具，如 gcc、make、autoconf、automake、libtool 等。可以使用以下命令安装：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>yum -y install openssl openssl-devel make zlib zlib-devel gcc gcc-c++ libtool    pcre pcre-devel</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-2下载-nginx-源码包" tabindex="-1">1.2下载 Nginx 源码包 <a class="header-anchor" href="#_1-2下载-nginx-源码包" aria-label="Permalink to &quot;1.2下载 Nginx 源码包&quot;">​</a></h3><p>从 Nginx 的官网下载最新的稳定版源码包：<a href="http://nginx.org/en/download.html%E3%80%82" target="_blank" rel="noreferrer">http://nginx.org/en/download.html。</a> 使用 wget 命令下载：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wget http://nginx.org/download/nginx-1.20.0.tar.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-3解压" tabindex="-1">1.3解压 <a class="header-anchor" href="#_1-3解压" aria-label="Permalink to &quot;1.3解压&quot;">​</a></h3><p>使用 tar 命令解压下载的源码包：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tar -zxvf nginx-1.20.0.tar.gz</span></span>
<span class="line"><span>cd nginx-1.20.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-4配置编译参数" tabindex="-1">1.4配置编译参数 <a class="header-anchor" href="#_1-4配置编译参数" aria-label="Permalink to &quot;1.4配置编译参数&quot;">​</a></h3><p>使用 configure 脚本进行配置：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>./configure --prefix=/usr/local/nginx --with-poll_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_stub_status_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_slice_module --with-mail --with-stream  --with-http_ssl_module --with-mail_ssl_module --with-stream_ssl_module --with-http_v2_module</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>参数说明：</p><p>prefix：指定安装路径； with-http_ssl_module：支持 SSL； with-http_stub_status_module：支持统计模块； with-pcre：使用 PCRE 库； with-http_realip_module：使用真实 IP 模块； with-http_sub_module：使用子模块。</p><h3 id="_1-5编译和安装" tabindex="-1">1.5编译和安装 <a class="header-anchor" href="#_1-5编译和安装" aria-label="Permalink to &quot;1.5编译和安装&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>make &amp;&amp; make install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-6配置-nginx" tabindex="-1">1.6配置 Nginx <a class="header-anchor" href="#_1-6配置-nginx" aria-label="Permalink to &quot;1.6配置 Nginx&quot;">​</a></h3><p>将 Nginx 安装目录下的 conf 目录下的 nginx.conf 文件复制到 /usr/local/nginx/conf 目录下：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cp /usr/local/nginx-1.20.0/conf/nginx.conf /usr/local/nginx/conf/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在安装目录中的 conf 目录下，有一个 nginx.conf 文件，这个文件是 Nginx 的配置文件。 可以根据自己的需求修改该文件，比如修改监听端口、添加虚拟主机等。</p><h3 id="_1-7启动-nginx" tabindex="-1">1.7启动 Nginx <a class="header-anchor" href="#_1-7启动-nginx" aria-label="Permalink to &quot;1.7启动 Nginx&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf    #启动</span></span>
<span class="line"><span>/usr/local/nginx/sbin/nginx -s quit    #停止</span></span>
<span class="line"><span>/usr/local/nginx/sbin/nginx -s reload /usr/local/nginx/conf/nginx.conf    #重载配置</span></span>
<span class="line"><span>/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf    #配置文件测试</span></span>
<span class="line"><span>ps -ef | grep nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_1-8验证" tabindex="-1">1.8验证 <a class="header-anchor" href="#_1-8验证" aria-label="Permalink to &quot;1.8验证&quot;">​</a></h3><p>在浏览器中输入服务器 IP 地址或域名，如果能够看到 Nginx 的欢迎页面，说明 Nginx 安装和配置成功。</p><h2 id="_2运行维护" tabindex="-1">2运行维护 <a class="header-anchor" href="#_2运行维护" aria-label="Permalink to &quot;2运行维护&quot;">​</a></h2><h3 id="_2-1-1nginx的location语法" tabindex="-1">2.1.1Nginx的location语法 <a class="header-anchor" href="#_2-1-1nginx的location语法" aria-label="Permalink to &quot;2.1.1Nginx的location语法&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location [=||*|^~] /uri/ { … }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>= 严格匹配。如果请求匹配这个location，那么将停止搜索并立即处理此请求</span></span>
<span class="line"><span>~ 区分大小写匹配(可用正则表达式)</span></span>
<span class="line"><span>~* 不区分大小写匹配(可用正则表达式)</span></span>
<span class="line"><span>!~ 区分大小写不匹配</span></span>
<span class="line"><span>!~* 不区分大小写不匹配</span></span>
<span class="line"><span>^~ 如果把这个前缀用于一个常规字符串,那么告诉nginx 如果路径匹配那么不测试正则表达式</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>示例</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location / { }</span></span>
<span class="line"><span>匹配任意请求</span></span>
<span class="line"><span>location ~* .(gif|jpg|jpeg)｛ rewrite .(gif|jpg|jpeg) /logo.png;｝</span></span>
<span class="line"><span>不区分大小写匹配任何以gif、jpg、jpeg结尾的请求，并将该请求重定向到 /logo.png请求</span></span>
<span class="line"><span>location ~ ^.+.txt$ { root /usr/local/nginx/html/;}</span></span>
<span class="line"><span>区分大小写匹配以.txt结尾的请求，并设置此location的路径是/usr/local/nginx/html/。</span></span>
<span class="line"><span>也就是以.txt结尾的请求将访问/usr/local/nginx/html/ 路径下的txt文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_2-1-2proxy-pass" tabindex="-1">2.1.2proxy_pass <a class="header-anchor" href="#_2-1-2proxy-pass" aria-label="Permalink to &quot;2.1.2proxy_pass&quot;">​</a></h3><ol><li>proxy_pass带/，location带/，则真实地址不带location匹配目录</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location /api/ {</span></span>
<span class="line"><span>proxy_pass http://127.0.0.1:8080/;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>访问地址：www.test.com/api/upload--&gt;http://127.0.0.1:8080/upload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li>proxy_pass带/，location不带/，则真实地址会带/</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location /api {</span></span>
<span class="line"><span>proxy_pass http://127.0.0.1:8080/;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>访问地址：www.test.com/api/upload--&gt;http://127.0.0.1:8080//upload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="3"><li>proxy_pass不带/，location带/，则真实地址会带location匹配目录/api/</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location /api/ {</span></span>
<span class="line"><span>proxy_pass http://127.0.0.1:8080;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>访问地址：www.test.com/api/upload--&gt;http://127.0.0.1:8080/api/upload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="4"><li>proxy_pass不带/，location不带/，则真实地址会带location匹配目录/api/</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location /api{</span></span>
<span class="line"><span>proxy_pass http://127.0.0.1:8080;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>访问地址： www.test.com/api/upload--&gt;http://127.0.0.1:8080/api/upload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="5"><li>proxy_pass带/，location带/，且 proxy_pass带地址</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location /api/{</span></span>
<span class="line"><span>proxy_pass http://127.0.0.1:8080/server/;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>访问地址： www.test.com/api/upload--&gt;http://127.0.0.1:8080/server/upload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="6"><li>proxy_pass带/，location不带/，且 proxy_pass带地址，则真实地址会多个/</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location /api{</span></span>
<span class="line"><span>proxy_pass http://127.0.0.1:8080/server/;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>访问地址： www.test.com/api/upload--&gt;http://127.0.0.1:8080/server//upload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="7"><li>proxy_pass不带/，location带/，且 proxy_pass带地址，则真实地址会直接连起来</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location /api/{</span></span>
<span class="line"><span>proxy_pass http://127.0.0.1:8080/server;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>访问地址： www.test.com/api/upload--&gt;http://127.0.0.1:8080/serverupload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="8"><li>proxy_pass不带/ ，location不带/，且 proxy_pass带地址，则真实地址匹配地址会替换location匹配目录</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>location /api{</span></span>
<span class="line"><span>proxy_pass http://127.0.0.1:8080/server;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>访问地址： www.test.com/api/upload--&gt;http://127.0.0.1:8080/server/upload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>总结</p><ol><li><p>proxy_pass代理地址端口后有目录(包括 / )，转发后地址：代理地址+访问URL目录部分去除location匹配目录</p></li><li><p>proxy_pass代理地址端口后无任何，转发后地址：代理地址+访问URL目录部</p></li></ol><h2 id="_2-2代理密码验证" tabindex="-1">2.2代理密码验证 <a class="header-anchor" href="#_2-2代理密码验证" aria-label="Permalink to &quot;2.2代理密码验证&quot;">​</a></h2><h3 id="_1-安装httpd-tools工具" tabindex="-1">1. 安装httpd-tools工具 <a class="header-anchor" href="#_1-安装httpd-tools工具" aria-label="Permalink to &quot;1. 安装httpd-tools工具&quot;">​</a></h3><p>yum install httpd-tools –y</p><h3 id="_2-生成用户名密码文件" tabindex="-1">2.生成用户名密码文件 <a class="header-anchor" href="#_2-生成用户名密码文件" aria-label="Permalink to &quot;2.生成用户名密码文件&quot;">​</a></h3><p>htpasswd -c ./genyonPasswd genyon</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>server {</span></span>
<span class="line"><span>        listen       80;</span></span>
<span class="line"><span>        server_name  localhost;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        #charset koi8-r;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        #access_log  logs/host.access.log  main;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        location / {</span></span>
<span class="line"><span>            auth_basic  &quot;input your user name and password &quot;;</span></span>
<span class="line"><span>            auth_basic_user_file /usr/local/nginx/conf/genyonpassword;</span></span>
<span class="line"><span>            proxy_pass http://127.0.0.1:8081;</span></span>
<span class="line"><span>            #root   html;</span></span>
<span class="line"><span>            #index  index.html index.htm;</span></span>
<span class="line"><span>        }    </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,57),i=[l];function t(r,o,c,d,u,h){return n(),a("div",null,i)}const g=s(p,[["render",t]]);export{m as __pageData,g as default};
