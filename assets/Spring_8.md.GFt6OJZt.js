import{_ as e,c as p,o as r,a8 as n}from"./chunks/framework.DDO5B0CJ.js";const h=JSON.parse('{"title":"谈谈你对Spring的理解","description":"","frontmatter":{},"headers":[],"relativePath":"Spring/8.md","filePath":"Spring/8.md"}'),a={name:"Spring/8.md"},t=n('<h1 id="谈谈你对spring的理解" tabindex="-1">谈谈你对Spring的理解 <a class="header-anchor" href="#谈谈你对spring的理解" aria-label="Permalink to &quot;谈谈你对Spring的理解&quot;">​</a></h1><p>可以从2个层面理解Spring:</p><p>首先Spring是一个生态：可以构建企业级应用程序所需的一切基础设施</p><p>但是，通常Spring指的就是Spring Framework，它有两大核心：</p><p>IOC 和 DI 的支持</p><p>Spring 的核心就是一个大的工厂容器，可以维护所有对象的创建和依赖关系，Spring 工厂用于生成 Bean，并且管理 Bean 的生命周期，实现高内聚低耦合的设计理念。</p><p>AOP 编程的支持</p><p>Spring 提供了面向切面编程，面向切面编程允许我们将横切关注点从核心业务逻辑中分离出来，实现代码的模块化和重用。可以方便的实现对程序进行权限拦截、运行监控、日志记录等切面功能。</p><p>除了这两大核心还提供了丰富的功能和模块， 数据访问、事务管理、Web开发等。数据访问模块提供了对数据库的访问支持，可以方便地进行数据库操作。事务管理模块提供了对事务的管理支持，确保数据的一致性和完整性。Web开发模块则提供了构建Web应用程序的工具和框架，简化了Web开发的过程。</p><p>总结一句话：它是一个轻量级、非入侵式的控制反转 (IoC) 和面向切面 (AOP) 的容器框架。</p>',10),i=[t];function o(_,s,c,S,d,g){return r(),p("div",null,i)}const m=e(a,[["render",o]]);export{h as __pageData,m as default};
