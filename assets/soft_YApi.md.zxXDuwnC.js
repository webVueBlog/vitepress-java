import{_ as a,c as n,o as s,a8 as p}from"./chunks/framework.DDO5B0CJ.js";const e="/vitepress-java/assets/img_5.D3b-Y7G9.png",g=JSON.parse('{"title":"YApi 运维","description":"","frontmatter":{},"headers":[],"relativePath":"soft/YApi.md","filePath":"soft/YApi.md"}'),l={name:"soft/YApi.md"},i=p('<h1 id="yapi-运维" tabindex="-1">YApi 运维 <a class="header-anchor" href="#yapi-运维" aria-label="Permalink to &quot;YApi 运维&quot;">​</a></h1><p>YApi (opens new window)是一个可本地部署的、打通前后端及 QA 的、可视化的接口管理平台。</p><p>记录 svn 的安装、配置、使用。</p><p><img src="'+e+`" alt="img_5.png" loading="lazy"></p><ol><li>普通部署</li></ol><h2 id="_1-1-环境要求" tabindex="-1">1.1. 环境要求 <a class="header-anchor" href="#_1-1-环境要求" aria-label="Permalink to &quot;1.1. 环境要求&quot;">​</a></h2><ol><li>nodejs（7.6+)</li><li>mongodb（2.6+）</li><li>git</li></ol><h2 id="_1-2-部署" tabindex="-1">1.2. 部署 <a class="header-anchor" href="#_1-2-部署" aria-label="Permalink to &quot;1.2. 部署&quot;">​</a></h2><h3 id="方式一-可视化部署-推荐" tabindex="-1">方式一. 可视化部署[推荐] <a class="header-anchor" href="#方式一-可视化部署-推荐" aria-label="Permalink to &quot;方式一. 可视化部署[推荐]&quot;">​</a></h3><p>执行 yapi server 启动可视化部署程序，输入相应的配置和点击开始部署，就能完成整个网站的部署。部署完成之后，可按照提示信息，执行 node/{网站路径/server/app.js} 启动服务器。在浏览器打开指定 url, 点击登录输入您刚才设置的管理员邮箱，默认密码(ymfe.org) 登录系统（默认密码可在个人中心修改）。</p><h3 id="方式二-命令行部署" tabindex="-1">方式二. 命令行部署 <a class="header-anchor" href="#方式二-命令行部署" aria-label="Permalink to &quot;方式二. 命令行部署&quot;">​</a></h3><p>如果 github 压缩文件无法下载，或需要部署到一些特殊的服务器，可尝试此方法</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mkdir yapi</span></span>
<span class="line"><span>cd yapi</span></span>
<span class="line"><span>git clone https://github.com/YMFE/yapi.git vendors //或者下载 zip 包解压到 vendors 目录（clone 整个仓库大概 140+ M，可以通过 \`git clone --depth=1 https://github.com/YMFE/yapi.git vendors\` 命令减少，大概 10+ M）</span></span>
<span class="line"><span>cp vendors/config_example.json ./config.json //复制完成后请修改相关配置</span></span>
<span class="line"><span>cd vendors</span></span>
<span class="line"><span>npm install --production --registry https://registry.npm.taobao.org</span></span>
<span class="line"><span>npm run install-server //安装程序会初始化数据库索引和管理员账号，管理员账号名可在 config.json 配置</span></span>
<span class="line"><span>node server/app.js //启动服务器后，请访问 127.0.0.1:{config.json配置的端口}，初次运行会有个编译的过程，请耐心等候</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>安装后的目录结构如下：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>|-- config.json</span></span>
<span class="line"><span>|-- init.lock</span></span>
<span class="line"><span>|-- log</span></span>
<span class="line"><span>\`-- vendors</span></span>
<span class="line"><span>    |-- CHANGELOG.md</span></span>
<span class="line"><span>    |-- LICENSE</span></span>
<span class="line"><span>    |-- README.md</span></span>
<span class="line"><span>    |-- client</span></span>
<span class="line"><span>    |-- common</span></span>
<span class="line"><span>    |-- config_example.json</span></span>
<span class="line"><span>    |-- doc</span></span>
<span class="line"><span>    |-- exts</span></span>
<span class="line"><span>    |-- nodemon.json</span></span>
<span class="line"><span>    |-- npm-debug.log</span></span>
<span class="line"><span>    |-- package.json</span></span>
<span class="line"><span>    |-- plugin.json</span></span>
<span class="line"><span>    |-- server</span></span>
<span class="line"><span>    |-- static</span></span>
<span class="line"><span>    |-- test</span></span>
<span class="line"><span>    |-- webpack.alias.js</span></span>
<span class="line"><span>    |-- yapi-base-flow.jpg</span></span>
<span class="line"><span>    |-- ydocfile.js</span></span>
<span class="line"><span>    \`-- ykit.config.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="_1-3-升级" tabindex="-1">1.3. 升级 <a class="header-anchor" href="#_1-3-升级" aria-label="Permalink to &quot;1.3. 升级&quot;">​</a></h3><p>升级项目版本是非常容易的，并且不会影响已有的项目数据，只会同步 vendors 目录下的源码文件。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cd  {项目目录}</span></span>
<span class="line"><span>yapi ls //查看版本号列表</span></span>
<span class="line"><span>yapi update //升级到最新版本</span></span>
<span class="line"><span>yapi update -v v1.1.0 //升级到指定版本</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li>Docker 部署</li></ol><h3 id="_2-1-环境要求" tabindex="-1">2.1. 环境要求 <a class="header-anchor" href="#_2-1-环境要求" aria-label="Permalink to &quot;2.1. 环境要求&quot;">​</a></h3><ol><li>系统：CentOS 7.4</li><li>硬件要求：1 GB RAM minimum</li><li>ip：<a href="http://192.168.1.121" target="_blank" rel="noreferrer">http://192.168.1.121</a></li><li>docker version：17.12.1-ce, build 7390fc6</li><li>docker-compose version：1.18.0, build 8dd22a9</li></ol><p>建议部署成 http 站点，因 chrome 浏览器安全限制，部署成 https 会导致测试功能在请求 http 站点时文件上传功能异常。--来源</p><h3 id="_2-2-部署" tabindex="-1">2.2. 部署 <a class="header-anchor" href="#_2-2-部署" aria-label="Permalink to &quot;2.2. 部署&quot;">​</a></h3><p>一个好心人的维护：<a href="https://github.com/branchzero/yapi-docker" target="_blank" rel="noreferrer">https://github.com/branchzero/yapi-docker</a>(opens new window)</p><p>使用方法： - work path：mkdir -p /opt/git-data - clone：cd /opt/git-data &amp;&amp; git clone <a href="https://github.com/branchzero/yapi-docker.git" target="_blank" rel="noreferrer">https://github.com/branchzero/yapi-docker.git</a> - permission：chmod -R 777 /opt/git-data - run command：cd /opt/git-data/yapi-docker &amp;&amp; docker-compose up -d - open chrome：<a href="http://192.168.1.121:3000" target="_blank" rel="noreferrer">http://192.168.1.121:3000</a></p><p>初始化管理员账号名：admin@admin.com，密码：ymfe.org</p>`,26),r=[i];function t(o,c,d,b,m,h){return s(),n("div",null,r)}const _=a(l,[["render",t]]);export{g as __pageData,_ as default};
