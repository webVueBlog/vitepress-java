import{_ as a,c as t,o as s,l as e,a as n}from"./chunks/framework.CbRyzB36.js";const o="/vitepress-java/assets/img_61.CZQYjWw9.png",r="/vitepress-java/assets/img_62.BD4Hyet6.png",B=JSON.parse('{"title":"九、线程不安全示例","description":"","frontmatter":{},"headers":[],"relativePath":"javaConcurrency/exampleThread.md","filePath":"javaConcurrency/exampleThread.md"}'),c={name:"javaConcurrency/exampleThread.md"},l=e("h1",{id:"九、线程不安全示例",tabindex:"-1"},[n("九、线程不安全示例 "),e("a",{class:"header-anchor",href:"#九、线程不安全示例","aria-label":'Permalink to "九、线程不安全示例"'},"​")],-1),i=e("p",null,"如果多个线程对同一个共享数据进行访问而不采取同步操作的话，那么操作的结果是 不一致的",-1),_=e("p",null,"以下代码演示了 1000 个线程同时对 cnt 执行自增操作，操作结束之后它的值有可能 小于 1000。",-1),d=e("p",null,[e("img",{src:o,alt:"img_61.png",loading:"lazy"})],-1),p=e("p",null,[e("img",{src:r,alt:"img_62.png",loading:"lazy"})],-1),m=e("p",null,"997",-1),h=[l,i,_,d,p,m];function g(u,f,v,x,j,y){return s(),t("div",null,h)}const C=a(c,[["render",g]]);export{B as __pageData,C as default};
