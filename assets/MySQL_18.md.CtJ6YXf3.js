import{_ as a,c as t,o as e,a8 as o}from"./chunks/framework.DDO5B0CJ.js";const s="/vitepress-java/assets/img_97.vj8TNn9k.png",i="/vitepress-java/assets/img_98.QdPVP9GU.png",p="/vitepress-java/assets/img_99.DMC4FCOz.png",r="/vitepress-java/assets/img_100.Cn4MriSe.png",n="/vitepress-java/assets/img_101.BXBtpNdU.png",l="/vitepress-java/assets/img_102.BGp8Ihu4.png",M=JSON.parse('{"title":"第 18 章 全文本搜索","description":"","frontmatter":{},"headers":[],"relativePath":"MySQL/18.md","filePath":"MySQL/18.md"}'),c={name:"MySQL/18.md"},_=o('<h1 id="第-18-章-全文本搜索" tabindex="-1">第 18 章 全文本搜索 <a class="header-anchor" href="#第-18-章-全文本搜索" aria-label="Permalink to &quot;第 18 章 全文本搜索&quot;">​</a></h1><p>使用MySQL的全文本搜索功能进行高级的数据查询 和选择</p><p>两个最常使用的引擎为MyISAM和InnoDB， 前者支持全文本搜索，而后者不支持</p><p>性能——通配符和正则表达式匹配通常要求MySQL尝试匹配表中所有行（而且这些搜索极少使用表索引）。因此，由于被搜索行 数不断增加，这些搜索可能非常耗时。</p><h2 id="使用全文本搜索" tabindex="-1">使用全文本搜索 <a class="header-anchor" href="#使用全文本搜索" aria-label="Permalink to &quot;使用全文本搜索&quot;">​</a></h2><p>为了进行全文本搜索，必须索引被搜索的列，而且要随着数据的改 变不断地重新索引。在对表列进行适当设计后，MySQL会自动进行所有 的索引和重新索引。</p><h2 id="启用全文本搜索支持" tabindex="-1">启用全文本搜索支持 <a class="header-anchor" href="#启用全文本搜索支持" aria-label="Permalink to &quot;启用全文本搜索支持&quot;">​</a></h2><p><img src="'+s+'" alt="img_97.png" loading="lazy"></p><p>在定义之后，MySQL自动维护该索引。在增加、更新或删除行时， 索引随之自动更新。</p><blockquote><p>不要在导入数据时使用FULLTEXT 更新索引要花时间，虽然 不是很多，但毕竟要花时间。如果正在导入数据到一个新表， 此时不应该启用FULLTEXT索引。应该首先导入所有数据，然 后再修改表，定义FULLTEXT。这样有助于更快地导入数据（而 且使索引数据的总时间小于在导入每行时分别进行索引所需 的总时间）</p></blockquote><h2 id="进行全文本搜索" tabindex="-1">进行全文本搜索 <a class="header-anchor" href="#进行全文本搜索" aria-label="Permalink to &quot;进行全文本搜索&quot;">​</a></h2><p>Match()指定被搜索的列，Against()指定要使用的搜索表达式。</p><p><img src="'+i+'" alt="img_98.png" loading="lazy"></p><p>此SELECT语句检索单个列note_text。由于WHERE子句，一个全 文本搜索被执行。Match(note_text)指示MySQL针对指定的 列进行搜索，Against(&#39;rabbit&#39;)指定词rabbit作为搜索文本。由于有 两行包含词rabbit，这两个行被返回。</p><blockquote><p>使用完整的 Match() 说 明 传递给 Match() 的值必须与 FULLTEXT()定义中的相同。如果指定多个列，则必须列出它 们（而且次序正确）。</p></blockquote><blockquote><p>搜索不区分大小写 除非使用BINARY方式， 否则全文本搜索不区分大小写。</p></blockquote><p><img src="'+p+'" alt="img_99.png" loading="lazy"></p><h2 id="使用查询扩展" tabindex="-1">使用查询扩展 <a class="header-anchor" href="#使用查询扩展" aria-label="Permalink to &quot;使用查询扩展&quot;">​</a></h2><p><img src="'+r+'" alt="img_100.png" loading="lazy"></p><h2 id="布尔文本搜索" tabindex="-1">布尔文本搜索 <a class="header-anchor" href="#布尔文本搜索" aria-label="Permalink to &quot;布尔文本搜索&quot;">​</a></h2><p>MySQL支持全文本搜索的另外一种形式，称为布尔方式（boolean mode）。</p><blockquote><p>即使没有FULLTEXT索引也可以使用 布尔方式不同于迄今为 止使用的全文本搜索语法的地方在于，即使没有定义 FULLTEXT索引，也可以使用它。但这是一种非常缓慢的操作 （其性能将随着数据量的增加而降低）。</p></blockquote><p><img src="'+n+'" alt="img_101.png" loading="lazy"></p><p><img src="'+l+'" alt="img_102.png" loading="lazy"></p><p>为什么要使用全文本搜索，以及如何使用MySQL的 Match()和Against()函数进行全文本搜索。</p>',25),h=[_];function d(g,m,b,u,L,q){return e(),t("div",null,h)}const S=a(c,[["render",d]]);export{M as __pageData,S as default};
