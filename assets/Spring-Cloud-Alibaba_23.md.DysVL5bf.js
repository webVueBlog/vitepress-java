import{_ as s,c as a,o as i,a8 as t}from"./chunks/framework.DDO5B0CJ.js";const p="/vitepress-java/assets/img_157.SnWGje3h.png",g="/vitepress-java/assets/img_158.D12HUFq0.png",_="/vitepress-java/assets/img_159.l92Vfx08.png",n="/vitepress-java/assets/img_160.DSwhmynJ.png",e="/vitepress-java/assets/img_161.YOyEYEpe.png",l="/vitepress-java/assets/img_162.BtEuj4l7.png",o="/vitepress-java/assets/img_163.to_zfPwk.png",m="/vitepress-java/assets/img_164.BpWvkQDW.png",r="/vitepress-java/assets/img_165.RlHKA6C5.png",c="/vitepress-java/assets/img_166.oq2a033i.png",v="/vitepress-java/assets/img_167.MC_S7oTF.png",d="/vitepress-java/assets/img_168.C3b_7R33.png",y="/vitepress-java/assets/img_169.CmArMgXo.png",z="/vitepress-java/assets/img_170.BzKDTYiB.png",j="/vitepress-java/assets/img_171.DM0vwR_t.png",u="/vitepress-java/assets/img_172.Dk4JwMvt.png",h="/vitepress-java/assets/img_173.E155CRZF.png",f="/vitepress-java/assets/img_174.BHAGGP3s.png",S="/vitepress-java/assets/img_175.o0ECR68V.png",b="/vitepress-java/assets/img_176.BczmNx4x.png",C="/vitepress-java/assets/img_177.T9MQuAq-.png",A="/vitepress-java/assets/img_178.DyYqoVOY.png",B="/vitepress-java/assets/img_179.BEuYyBHE.png",w=JSON.parse('{"title":"23-流控规则-流控模式","description":"","frontmatter":{},"headers":[],"relativePath":"Spring-Cloud-Alibaba/23.md","filePath":"Spring-Cloud-Alibaba/23.md"}'),D={name:"Spring-Cloud-Alibaba/23.md"},E=t('<h1 id="_23-流控规则-流控模式" tabindex="-1">23-流控规则-流控模式 <a class="header-anchor" href="#_23-流控规则-流控模式" aria-label="Permalink to &quot;23-流控规则-流控模式&quot;">​</a></h1><p><img src="'+p+'" alt="img_157.png" loading="lazy"></p><ul><li>流量模式</li><li>流控效果</li></ul><p>sentinel共有三种流控模式，分别是：</p><ul><li>直接（默认）：接口达到限流条件时，直接限流，也是Sentinel的默认模式。</li><li>关联：当关联的资源达到阈值时，就限流自己。（当关联的资源达到限流条件时，开启限流【适合做应用让步】）</li><li>链路：当从某个接口过来的资源达到限流条件时，开启限流</li></ul><p><img src="'+g+'" alt="img_158.png" loading="lazy"></p><p><img src="'+_+'" alt="img_159.png" loading="lazy"></p><p><img src="'+n+'" alt="img_160.png" loading="lazy"></p><p><img src="'+e+'" alt="img_161.png" loading="lazy"></p><p><img src="'+l+'" alt="img_162.png" loading="lazy"></p><h2 id="链路" tabindex="-1">链路 <a class="header-anchor" href="#链路" aria-label="Permalink to &quot;链路&quot;">​</a></h2><p><img src="'+o+'" alt="img_163.png" loading="lazy"></p><p><img src="'+m+'" alt="img_164.png" loading="lazy"></p><p><img src="'+r+'" alt="img_165.png" loading="lazy"></p><p><img src="'+c+'" alt="img_166.png" loading="lazy"></p><p><img src="'+v+'" alt="img_167.png" loading="lazy"></p><p><img src="'+d+'" alt="img_168.png" loading="lazy"></p><p><img src="'+y+'" alt="img_169.png" loading="lazy"></p><p><img src="'+z+'" alt="img_170.png" loading="lazy"></p><p><img src="'+j+'" alt="img_171.png" loading="lazy"></p><p><img src="'+u+'" alt="img_172.png" loading="lazy"></p><p><img src="'+h+'" alt="img_173.png" loading="lazy"></p><p><img src="'+f+'" alt="img_174.png" loading="lazy"></p><p><img src="'+S+'" alt="img_175.png" loading="lazy"></p><p><img src="'+b+'" alt="img_176.png" loading="lazy"></p><p><img src="'+C+'" alt="img_177.png" loading="lazy"></p><p>关联：设置一个关联资源，当关联的资源达到阈值时，就限流自己。</p><p>链路：（有些版本是不支持的），</p><p><img src="'+A+'" alt="img_178.png" loading="lazy"></p><p><img src="'+B+'" alt="img_179.png" loading="lazy"></p>',30),T=[E];function q(x,P,k,R,V,Y){return i(),a("div",null,T)}const H=s(D,[["render",q]]);export{w as __pageData,H as default};
