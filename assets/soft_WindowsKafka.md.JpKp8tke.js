import{_ as a,c as e,o as s,a8 as i}from"./chunks/framework.DDO5B0CJ.js";const p="/vitepress-java/assets/img_54.BwU9UX0z.png",t="/vitepress-java/assets/img_55.DsH-Wir8.png",o="/vitepress-java/assets/img_56.ClPkj5u4.png",n="/vitepress-java/assets/img_57._WwtTqk0.png",l="/vitepress-java/assets/img_58.CWoYdh1Z.png",r="/vitepress-java/assets/img_59.BSwS46US.png",c="/vitepress-java/assets/img_60.CxIB4cpg.png",g="/vitepress-java/assets/img_61.k9VY4hNR.png",d="/vitepress-java/assets/img_62.uj3A_q5H.png",k="/vitepress-java/assets/img_63.Bvxa97ia.png",m="/vitepress-java/assets/img_64.YwFnK7dg.png",h="/vitepress-java/assets/img_65.CxeUy5co.png",_="/vitepress-java/assets/img_66.BZ6qdAK4.png",u="/vitepress-java/assets/img_67.K7WQiana.png",f="/vitepress-java/assets/img_68.DFh3Mmy-.png",v="/vitepress-java/assets/img_69.T_99UggD.png",b="/vitepress-java/assets/img_70.fHAziQtx.png",y="/vitepress-java/assets/img_71.BAFR4b4N.png",z="/vitepress-java/assets/img_72.CKl5XQgJ.png",P="/vitepress-java/assets/img_73.zgr_9bBi.png",w="/vitepress-java/assets/img_74.JCBtVBhT.png",C="/vitepress-java/assets/img_75.CDmquBvu.png",K="/vitepress-java/assets/img_76.B52zzGkq.png",q="/vitepress-java/assets/img_77.BgvunnOn.png",j="/vitepress-java/assets/img_78.CSuJAPyz.png",B="/vitepress-java/assets/img_79.BEE92lw-.png",x="/vitepress-java/assets/img_80.DFKB97Ik.png",T="/vitepress-java/assets/img_81.BjzVYy0R.png",D="/vitepress-java/assets/img_82.BQvdBYyb.png",R="/vitepress-java/assets/img_83.Dbry1iCd.png",N=JSON.parse('{"title":"Windows安装kafka","description":"","frontmatter":{},"headers":[],"relativePath":"soft/WindowsKafka.md","filePath":"soft/WindowsKafka.md"}'),S={name:"soft/WindowsKafka.md"},W=i('<h1 id="windows安装kafka" tabindex="-1">Windows安装kafka <a class="header-anchor" href="#windows安装kafka" aria-label="Permalink to &quot;Windows安装kafka&quot;">​</a></h1><p>Kafka流处理平台特性：</p><ol><li>它是可以发布或订阅数据的流的系统，类似于消息队列</li><li>数据流存储的平台，并且具备错误容忍</li><li>当数据产生时就对数据进行处理</li></ol><p>两类应用：</p><ol><li>构建实时数据流管道</li><li>构建实时数据处理应用，转换或响应数据流</li></ol><p>kafka是一个面向于数据流的生产、转换、存储、消费整体的流处理平台。</p><p>kafka是一个消息队列，但不仅仅是一个消息队列。</p><h2 id="kafka基本概念" tabindex="-1">Kafka基本概念 <a class="header-anchor" href="#kafka基本概念" aria-label="Permalink to &quot;Kafka基本概念&quot;">​</a></h2><p>Producer:消息和数据的生产者，向Kafka的一个topic发布消息的进程/代码/服务</p><p>Consumer:消息和数据的消费者，订阅数据（Topic）并且处理其发布的消息的进程/代码/服务</p><p>Consumer Group:逻辑概念，对于同一个topic，会广播给不同的group，一个group中，只有一个consumer可以消费该消息</p><p>Broker:物理概念，Kafka集群中的每个Kafka节点</p><p>Topic:逻辑概念，Kafka消息的类别，对数据进行区分、隔离</p><p>Partition：物理概念，Kafka下数据存储的基本单元。一个Topic数据，会被分散存储到多个Partition，每一个Partition是有序的</p><p>Replication（副本、备份）:同一个Partition可能会有多个Replica，多个Replica之间数据是一样的</p><p>Replication Leader:一个Partitionn的多个Replica上，需要一个Leader负责该Partition上与Producer和Consumer交互</p><p>ReplicaManager:负责管理当前broker所有分区和副本的信息，处理KafkaController发起的一些请求， 副本状态的切换、添加/读取消息、Leader的选举等</p><h2 id="kafka组成" tabindex="-1">kafka组成： <a class="header-anchor" href="#kafka组成" aria-label="Permalink to &quot;kafka组成：&quot;">​</a></h2><ol><li>broker 节点</li><li>topic 数据分类</li><li>partition 分区</li><li>replication 副本</li></ol><h2 id="partition" tabindex="-1">Partition <a class="header-anchor" href="#partition" aria-label="Permalink to &quot;Partition&quot;">​</a></h2><p>每一个Topic被切分为多个Partitions(Partition属于消费者存储的基本单位)</p><p>消费者数目小于或等于Partition的数目（多个消费者若消费同个Partition会出现数据错误，所有Kafka如此设计）</p><p>Broker Group中的每一个Broker保存Topic的一个或多个Partitions(一个Broker只会保存一个Partition, 若Partition太大则多个Broker保存同个Partition)</p><p>Consumer Group中的仅有一个Consumer读取Topic的一个或多个Partitions，并且是唯一的Consumer(避免同一个Partition被多个Consumer消费)</p><h2 id="replication" tabindex="-1">Replication <a class="header-anchor" href="#replication" aria-label="Permalink to &quot;Replication&quot;">​</a></h2><p>当集群中有Broker挂掉的情况，系统可以主动地使Replicas提供服务</p><p>系统默认设置每一个Topic的replication系数为1（即默认没有副本，节省资源），可以在创建Topic时单独设置</p><h2 id="特点" tabindex="-1">特点： <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点：&quot;">​</a></h2><ol><li>Replication的基本单位是Topic的Partition;</li><li>所有的读和写都从Leader进，Followers只是做为备份（只有Leader管理读写，其他的Replication只做备份）</li><li>Follower必须能够及时复制Leader的数据</li><li>增加容错性与可拓展性</li></ol><h2 id="kafka消息结构" tabindex="-1">kafka消息结构： <a class="header-anchor" href="#kafka消息结构" aria-label="Permalink to &quot;kafka消息结构：&quot;">​</a></h2><ol><li>Offset: 消息的偏移量</li><li>Length: 消息的长度</li><li>CRC32 : 消息校验字段，校验信息的完整性</li><li>Magic:  用于判断该消息是不是kafka消息</li><li>attributes: 可选字段，存放当前消息的属性</li><li>Timestamp:  消费时间戳</li><li>Key Length: key的长度</li><li>Key : key的值</li><li>Value Length: 值的长度</li><li>Value: 消息内容</li></ol><p><img src="'+p+'" alt="img_54.png" loading="lazy"></p><p><img src="'+t+'" alt="img_55.png" loading="lazy"></p><p><img src="'+o+'" alt="img_56.png" loading="lazy"></p><h2 id="kafka应用场景" tabindex="-1">kafka应用场景 <a class="header-anchor" href="#kafka应用场景" aria-label="Permalink to &quot;kafka应用场景&quot;">​</a></h2><ol><li>消息队列</li><li>行为跟踪</li><li>元信息监控</li><li>日志收集</li><li>流处理</li><li>事件源</li><li>持久性日志（commit log）</li></ol><p>对故障节点的恢复提供一种重新投入的机制。日志压缩</p><p><img src="'+n+'" alt="img_57.png" loading="lazy"></p><p>brew install kafka</p><p><img src="'+l+'" alt="img_58.png" loading="lazy"></p><p><img src="'+r+'" alt="img_59.png" loading="lazy"></p><p><img src="'+c+'" alt="img_60.png" loading="lazy"></p><p>启动zookeeper命令:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>zookeeper-server-start /usr/local/etc/kafka/zookeeper.properties</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>启动kafka命令： 进入kafka安装目录，</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cd /usr/local/Cellar/kafka/1.1.0/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>启动命令：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>./bin/kafka-server-start /usr/local/etc/kafka/server.properties</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>启动kafka生产者：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>./bin/kafka-console-producer --broker-list localhost:9092 --topic imooc-kafka-topic</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>启动kafka消费者：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>./bin/kafka-console-consumer --bootstrap-server localhost:9092 --topic imooc-kafka-topic --from-beginning</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+g+'" alt="img_61.png" loading="lazy"></p><p><img src="'+d+'" alt="img_62.png" loading="lazy"></p><p>--from-beginning 是否从头消费</p><p><img src="'+k+'" alt="img_63.png" loading="lazy"></p><p><img src="'+m+'" alt="img_64.png" loading="lazy"></p><p><img src="'+h+'" alt="img_65.png" loading="lazy"></p><p><img src="'+_+'" alt="img_66.png" loading="lazy"></p><p><img src="'+u+'" alt="img_67.png" loading="lazy"></p><p><img src="'+f+'" alt="img_68.png" loading="lazy"></p><p><img src="'+v+'" alt="img_69.png" loading="lazy"></p><p><img src="'+b+'" alt="img_70.png" loading="lazy"></p><p><img src="'+y+'" alt="img_71.png" loading="lazy"></p><h2 id="在windows环境下安装运行kafka" tabindex="-1">在Windows环境下安装运行kafka <a class="header-anchor" href="#在windows环境下安装运行kafka" aria-label="Permalink to &quot;在Windows环境下安装运行kafka&quot;">​</a></h2><h3 id="安装zookeeper" tabindex="-1">安装ZooKeeper <a class="header-anchor" href="#安装zookeeper" aria-label="Permalink to &quot;安装ZooKeeper&quot;">​</a></h3><p>1、 下载安装包</p><p><a href="http://zookeeper.apache.org/releases.html#download" target="_blank" rel="noreferrer">http://zookeeper.apache.org/releases.html#download</a></p><p><img src="'+z+'" alt="img_72.png" loading="lazy"></p><p><img src="'+P+'" alt="img_73.png" loading="lazy"></p><p>2、 解压并进入ZooKeeper目录，目录：</p><p>D:\\softPackage\\zookeeper\\zookeeper-3.4.13\\conf</p><p>3、 将“zoo_sample.cfg”重命名为“zoo.cfg”</p><p>4、 打开“zoo.cfg”找到并编辑：</p><p>dataDir=D:\\softPackage\\zookeeper\\zookeeper-3.4.13\\tmp</p><p>5、 添加系统变量：ZOOKEEPER_HOME=D:\\softPackage\\zookeeper\\zookeeper-3.4.13</p><p>6、 编辑path系统变量，添加路径：%ZOOKEEPER_HOME%\\bin</p><p>7、 在zoo.cfg文件中修改默认的Zookeeper端口（默认端口2181）</p><p>8、 打开新的cmd，输入“zkServer“，运行Zookeeper</p><p>9、 命令行提示如下：说明本地Zookeeper启动成功</p><p><img src="'+w+'" alt="img_74.png" loading="lazy"></p><h3 id="安装kafka" tabindex="-1">安装Kafka <a class="header-anchor" href="#安装kafka" aria-label="Permalink to &quot;安装Kafka&quot;">​</a></h3><p>1、 下载安装包</p><p><a href="http://kafka.apache.org/downloads" target="_blank" rel="noreferrer">http://kafka.apache.org/downloads</a></p><p>注意要下载二进制版本</p><p><img src="'+C+'" alt="img_75.png" loading="lazy"></p><p>2、 解压并进入Kafka目录，目录：D:\\softPackage\\kafka\\kafka_2.12-2.0.1</p><p>3、 进入config目录找到文件server.properties并打开</p><p>4、 找到并编辑log.dirs=D:\\softPackage\\kafka\\kafka_2.12-2.0.1\\kafka-logs</p><p>5、 找到并编辑zookeeper.connect=localhost:2181</p><p>6、 Kafka会按照默认，在9092端口上运行，并连接zookeeper的默认端口：2181</p><p>7、 进入Kafka安装目录D:\\softPackage\\kafka\\kafka_2.12-2.0.1，</p><p>按下Shift+右键，选择“打开命令窗口”选项，打开命令行，输入如下命令，启动kafka服务</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.\\bin\\windows\\kafka-server-start.bat .\\config\\server.properties</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+K+'" alt="img_76.png" loading="lazy"></p><blockquote><p>注意：不要关了这个窗口，启用Kafka前请确保ZooKeeper实例已经准备好并开始运行</p></blockquote><h2 id="实战应用" tabindex="-1">实战应用 <a class="header-anchor" href="#实战应用" aria-label="Permalink to &quot;实战应用&quot;">​</a></h2><p>1、 创建主题，进入Kafka安装目录D:\\softPackage\\kafka\\kafka_2.12-2.0.1，按下Shift+右键，选择“打开命令窗口”选项，打开命令行，输入：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.\\bin\\windows\\kafka-topics.bat --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic lhf-kafka</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+q+'" alt="img_77.png" loading="lazy"></p><blockquote><p>注意：不要关了这个窗口</p></blockquote><p>查看主题输入：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.\\bin\\windows\\kafka-topics.bat --list --zookeeper localhost:2181</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+j+'" alt="img_78.png" loading="lazy"></p><p>2、 创建生产者，进入Kafka安装目录D:\\softPackage\\kafka\\kafka_2.12-2.0.1，按下Shift+右键，选择“打开命令窗口”选项，打开命令行，输入：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.\\bin\\windows\\kafka-console-producer.bat --broker-list localhost:9092 --topic lhf-kafka</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+B+'" alt="img_79.png" loading="lazy"></p><blockquote><p>注意：不要关了这个窗口</p></blockquote><p>3、 创建消费者，进入Kafka安装目录D:\\softPackage\\kafka\\kafka_2.12-2.0.1，按下Shift+右键，选择“打开命令窗口”选项，打开命令行，输入：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.\\bin\\windows\\kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic lhf-kafka --from-beginning</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+x+'" alt="img_80.png" loading="lazy"></p><p><img src="'+T+'" alt="img_81.png" loading="lazy"></p><p><img src="'+D+'" alt="img_82.png" loading="lazy"></p><p><img src="'+R+'" alt="img_83.png" loading="lazy"></p>',114),E=[W];function Z(L,O,A,V,F,H){return s(),e("div",null,E)}const U=a(S,[["render",Z]]);export{N as __pageData,U as default};
