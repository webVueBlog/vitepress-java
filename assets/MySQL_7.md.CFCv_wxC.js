import{_ as a,c as t,o as s,a8 as i}from"./chunks/framework.DDO5B0CJ.js";const p="/vitepress-java/assets/img_25.92UOHnKt.png",e="/vitepress-java/assets/img_26.BFfxp_48.png",o="/vitepress-java/assets/img_27.BVJQPuDc.png",n="/vitepress-java/assets/img_28.Dw71uoui.png",r="/vitepress-java/assets/img_29.Dq5DGAU2.png",_="/vitepress-java/assets/img_30.CZMKHJp1.png",l="/vitepress-java/assets/img_31.BhxmecQC.png",R=JSON.parse('{"title":"第 7 章 数 据 过 滤","description":"","frontmatter":{},"headers":[],"relativePath":"MySQL/7.md","filePath":"MySQL/7.md"}'),c={name:"MySQL/7.md"},g=i('<h1 id="第-7-章-数-据-过-滤" tabindex="-1">第 7 章 数 据 过 滤 <a class="header-anchor" href="#第-7-章-数-据-过-滤" aria-label="Permalink to &quot;第 7 章 数 据 过 滤&quot;">​</a></h1><p>如何使用NOT和IN操作符</p><p>为了进行更强的过滤控制，MySQL允许给出多个WHERE子句。这些子 句可以两种方式使用：以AND子句的方式或OR子句的方式使用。</p><p>操作符（operator） 用来联结或改变WHERE子句中的子句的关键 字。也称为逻辑操作符（logical operator）。</p><p><img src="'+p+'" alt="img_25.png" loading="lazy"></p><p>AND 用在WHERE子句中的关键字，用来指示检索满足所有给定 条件的行。</p><p><img src="'+e+'" alt="img_26.png" loading="lazy"></p><p>OR WHERE子句中使用的关键字，用来表示检索匹配任一给定 条件的行。</p><p><img src="'+o+'" alt="img_27.png" loading="lazy"></p><p>由于AND在计算次序中优先级更高，操作 符被错误地组合了。</p><p><img src="'+n+'" alt="img_28.png" loading="lazy"></p><p>IN取合法值的由逗号分隔的清 单，全都括在圆括号中。</p><p><img src="'+r+'" alt="img_29.png" loading="lazy"></p><p><img src="'+_+'" alt="img_30.png" loading="lazy"></p><h2 id="为什么要使用in操作符-其优点具体如下。" tabindex="-1">为什么要使用IN操作符？其优点具体如下。 <a class="header-anchor" href="#为什么要使用in操作符-其优点具体如下。" aria-label="Permalink to &quot;为什么要使用IN操作符？其优点具体如下。&quot;">​</a></h2><ul><li> 在使用长的合法选项清单时，IN操作符的语法更清楚且更直观。</li><li> 在使用IN时，计算的次序更容易管理（因为使用的操作符更少）。</li><li> IN操作符一般比OR操作符清单执行更快。</li><li> IN的最大优点是可以包含其他SELECT语句，使得能够更动态地建 立WHERE子句。</li></ul><p>IN WHERE子句中用来指定要匹配值的清单的关键字，功能与OR 相当。</p><h2 id="not操作符" tabindex="-1">NOT操作符 <a class="header-anchor" href="#not操作符" aria-label="Permalink to &quot;NOT操作符&quot;">​</a></h2><p>WHERE子句中的NOT操作符有且只有一个功能，那就是否定它之后所 跟的任何条件。</p><blockquote><p>NOT WHERE子句中用来否定后跟条件的关键字</p></blockquote><p><img src="'+l+'" alt="img_31.png" loading="lazy"></p><p>为什么使用NOT？对于简单的WHERE子句，使用NOT确实没有什么优 势。但在更复杂的子句中，NOT是非常有用的。例如，在与IN操作符联合 使用时，NOT使找出与条件列表不匹配的行非常简单。</p>',22),m=[g];function d(N,h,E,u,v,T){return s(),t("div",null,m)}const f=a(c,[["render",d]]);export{R as __pageData,f as default};
