import{_ as s,c as a,o as e,a8 as n}from"./chunks/framework.DDO5B0CJ.js";const h=JSON.parse('{"title":"模糊查询 like 语句该怎么写?","description":"","frontmatter":{},"headers":[],"relativePath":"MyBatis/11.md","filePath":"MyBatis/11.md"}'),p={name:"MyBatis/11.md"},l=n(`<h1 id="模糊查询-like-语句该怎么写" tabindex="-1">模糊查询 like 语句该怎么写? <a class="header-anchor" href="#模糊查询-like-语句该怎么写" aria-label="Permalink to &quot;模糊查询 like 语句该怎么写?&quot;">​</a></h1><p>在MyBatis中，要执行模糊查询（使用LIKE语句），你可以使用SQL语句的字符串拼接或使用动态SQL来构建查询语句。下面我将为你展示两种常用的方式。 假设你要在一个查询中执行模糊查询，搜索用户的用户名包含特定关键字的情况。</p><p>字符串拼接方式：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;select id=&quot;searchUsers&quot; resultMap=&quot;userResultMap&quot;&gt;</span></span>
<span class="line"><span>    SELECT * FROM users</span></span>
<span class="line"><span>    WHERE username LIKE CONCAT(&#39;%&#39;, #{keyword}, &#39;%&#39;)</span></span>
<span class="line"><span>&lt;/select&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在这个例子中，<code>#{keyword}</code>是参数占位符，表示要搜索的关键字。<code>CONCAT(&#39;%&#39;, #{keyword}, &#39;%&#39;)</code>用于构建模糊匹配的字符串。</p><p>动态SQL方式：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;select id=&quot;searchUsers&quot; resultMap=&quot;userResultMap&quot;&gt;</span></span>
<span class="line"><span>    SELECT * FROM users</span></span>
<span class="line"><span>    &lt;where&gt;</span></span>
<span class="line"><span>        &lt;if test=&quot;keyword != null&quot;&gt;</span></span>
<span class="line"><span>            AND username LIKE CONCAT(&#39;%&#39;, #{keyword}, &#39;%&#39;)</span></span>
<span class="line"><span>        &lt;/if&gt;</span></span>
<span class="line"><span>    &lt;/where&gt;</span></span>
<span class="line"><span>&lt;/select&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在这个例子中，使用了<code>&lt;if&gt;</code>标签来创建动态条件。 只有在 keyword 参数不为 null 时，才会添加<code>AND username LIKE CONCAT(&#39;%&#39;, #{keyword}, &#39;%&#39;)</code>这个条件到查询语句中。</p><p>无论哪种方式，你都可以在SQL语句中使用LIKE关键字来实现模糊查询，然后通过#{}语法或动态SQL的方式将参数值插入到查询语句中。 选择哪种方式取决于你的项目需求和团队的偏好。</p>`,9),t=[l];function i(r,c,o,d,u,b){return e(),a("div",null,t)}const _=s(p,[["render",i]]);export{h as __pageData,_ as default};
