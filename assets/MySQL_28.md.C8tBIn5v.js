import{_ as a,c as e,o as t,a8 as o}from"./chunks/framework.DDO5B0CJ.js";const r="/vitepress-java/assets/img_140.bG-XPXGp.png",s="/vitepress-java/assets/img_141.RERaQKO9.png",b=JSON.parse('{"title":"第 28 章 安 全 管 理","description":"","frontmatter":{},"headers":[],"relativePath":"MySQL/28.md","filePath":"MySQL/28.md"}'),i={name:"MySQL/28.md"},n=o('<h1 id="第-28-章-安-全-管-理" tabindex="-1">第 28 章 安 全 管 理 <a class="header-anchor" href="#第-28-章-安-全-管-理" aria-label="Permalink to &quot;第 28 章 安 全 管 理&quot;">​</a></h1><h2 id="访问控制" tabindex="-1">访问控制 <a class="header-anchor" href="#访问控制" aria-label="Permalink to &quot;访问控制&quot;">​</a></h2><blockquote><p>防止无意的错误 重要的是注意到，访问控制的目的不仅仅 是防止用户的恶意企图。数据梦魇更为常见的是无意识错误 的结果，如错打MySQL语句，在不合适的数据库中操作或其 他一些用户错误。通过保证用户不能执行他们不应该执行的 语句，访问控制有助于避免这些情况的发生</p></blockquote><h2 id="管理用户" tabindex="-1">管理用户 <a class="header-anchor" href="#管理用户" aria-label="Permalink to &quot;管理用户&quot;">​</a></h2><p>MySQL用户账号和信息存储在名为mysql的MySQL数据库中。一般 不需要直接访问mysql数据库和表</p><h2 id="删除用户账号" tabindex="-1">删除用户账号 <a class="header-anchor" href="#删除用户账号" aria-label="Permalink to &quot;删除用户账号&quot;">​</a></h2><p><img src="'+r+'" alt="img_140.png" loading="lazy"></p><h2 id="设置访问权限" tabindex="-1">设置访问权限 <a class="header-anchor" href="#设置访问权限" aria-label="Permalink to &quot;设置访问权限&quot;">​</a></h2><p><img src="'+s+'" alt="img_141.png" loading="lazy"></p>',9),l=[n];function _(c,h,d,p,m,u){return t(),e("div",null,l)}const f=a(i,[["render",_]]);export{b as __pageData,f as default};
