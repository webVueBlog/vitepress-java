import{_ as a,c as e,o as t,a8 as n}from"./chunks/framework.DDO5B0CJ.js";const F=JSON.parse('{"title":"BeanFactory 和FactoryBean有什么区别？","description":"","frontmatter":{},"headers":[],"relativePath":"Spring/27.md","filePath":"Spring/27.md"}'),o={name:"Spring/27.md"},r=n('<h1 id="beanfactory-和factorybean有什么区别" tabindex="-1">BeanFactory 和FactoryBean有什么区别？ <a class="header-anchor" href="#beanfactory-和factorybean有什么区别" aria-label="Permalink to &quot;BeanFactory 和FactoryBean有什么区别？&quot;">​</a></h1><p>BeanFactory是Spring框架的核心接口之一，用于管理和获取Bean对象亦陈为bean的容器。使用了简单工厂模式，提供getBean方法用来获取bean。</p><p>FactoryBean是一个bean，但是它是一个特殊的bean。</p><p>它是一个接口，他必须被一个bean去实现。</p><p>FactoryBean接口定义了两个方法：getObject()和getObjectType()。</p><p>getObjectType()方法用于返回创建的Bean对象的类型。</p><p>getObject()方法用于返回创建的Bean对象，最终该Bean对象会进行注入，MyBatis集成Spring时的那个SqlSessionFactoryBean就实现了FactoryBean， 最终通过getObject()将SqlSessionFactory注入到Ioc容器中。</p><p>所以FactoryBean不是一个普通的Bean，它会表现出工厂模式的样子,可以自定义创建Bean对象的逻辑，可以在创建Bean对象之前进行一些额外的处理。</p><p>如果要获得FactoryBean类本身而非getObject()返回的Bean可以通过在BeanName前加“&amp;”进行获取。</p><p>所以他们直接没有什么关系， 实在要扯上点关系那就是BeanFactory管理了FactoryBean，</p>',10),c=[r];function p(s,B,_,i,y,b){return t(),e("div",null,c)}const l=a(o,[["render",p]]);export{F as __pageData,l as default};
