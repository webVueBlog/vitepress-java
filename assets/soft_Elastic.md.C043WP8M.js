import{_ as a,c as s,o as n,a8 as e}from"./chunks/framework.CbRyzB36.js";const l="/vitepress-java/assets/img_53.Bsetrpwy.png",g=JSON.parse('{"title":"Elastic 技术栈","description":"","frontmatter":{},"headers":[],"relativePath":"soft/Elastic.md","filePath":"soft/Elastic.md"}'),p={name:"soft/Elastic.md"},t=e('<h1 id="elastic-技术栈" tabindex="-1">Elastic 技术栈 <a class="header-anchor" href="#elastic-技术栈" aria-label="Permalink to &quot;Elastic 技术栈&quot;">​</a></h1><p>Elastic 技术栈通常被用来作为日志中心。</p><p>ELK 是 elastic 公司旗下三款产品 ElasticSearch (opens new window)、Logstash (opens new window)、Kibana (opens new window)的首字母组合。</p><p>ElasticSearch (opens new window)是一个基于 Lucene (opens new window)构建的开源，分布式，RESTful 搜索引擎。</p><p>Logstash (opens new window)传输和处理你的日志、事务或其他数据。</p><p>Kibana (opens new window)将 Elasticsearch 的数据分析并渲染为可视化的报表。</p><p>Elastic 技术栈，在 ELK 的基础上扩展了一些新的产品，如：Beats (opens new window)、X-Pack (opens new window)。</p><h1 id="elastic-技术栈之快速入门" tabindex="-1">Elastic 技术栈之快速入门 <a class="header-anchor" href="#elastic-技术栈之快速入门" aria-label="Permalink to &quot;Elastic 技术栈之快速入门&quot;">​</a></h1><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><h2 id="elk-是什么" tabindex="-1">ELK 是什么 <a class="header-anchor" href="#elk-是什么" aria-label="Permalink to &quot;ELK 是什么&quot;">​</a></h2><p>ELK 是 elastic 公司旗下三款产品 ElasticSearch (opens new window)、Logstash (opens new window)、Kibana (opens new window)的首字母组合。</p><p>ElasticSearch (opens new window)是一个基于 Lucene (opens new window)构建的开源，分布式，RESTful 搜索引擎。</p><p>Logstash (opens new window)传输和处理你的日志、事务或其他数据。</p><p>Kibana (opens new window)将 Elasticsearch 的数据分析并渲染为可视化的报表。</p><h2 id="为什么使用-elk" tabindex="-1">为什么使用 ELK ？ <a class="header-anchor" href="#为什么使用-elk" aria-label="Permalink to &quot;为什么使用 ELK ？&quot;">​</a></h2><p>对于有一定规模的公司来说，通常会很多个应用，并部署在大量的服务器上。运维和开发人员常常需要通过查看日志来定位问题。如果应用是集群化部署，试想如果登录一台台服务器去查看日志，是多么费时费力。</p><p>而通过 ELK 这套解决方案，可以同时实现日志收集、日志搜索和日志分析的功能。</p><h2 id="elastic-架构" tabindex="-1">Elastic 架构 <a class="header-anchor" href="#elastic-架构" aria-label="Permalink to &quot;Elastic 架构&quot;">​</a></h2><p><img src="'+l+`" alt="img_53.png" loading="lazy"></p><p>说明</p><p>以上是 ELK 技术栈的一个架构图。从图中可以清楚的看到数据流向。</p><p>Beats (opens new window)是单一用途的数据传输平台，它可以将多台机器的数据发送到 Logstash 或 ElasticSearch。但 Beats 并不是不可或缺的一环，所以本文中暂不介绍。</p><p>Logstash (opens new window)是一个动态数据收集管道。支持以 TCP/UDP/HTTP 多种方式收集数据（也可以接受 Beats 传输来的数据），并对数据做进一步丰富或提取字段处理。</p><p>ElasticSearch (opens new window)是一个基于 JSON 的分布式的搜索和分析引擎。作为 ELK 的核心，它集中存储数据。</p><p>Kibana (opens new window)是 ELK 的用户界面。它将收集的数据进行可视化展示（各种报表、图形化数据），并提供配置、管理 ELK 的界面。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><h3 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h3><p>ELK 要求本地环境中安装了 JDK 。如果不确定是否已安装，可使用下面的命令检查：</p><p>java -version</p><p>注意</p><p>本文使用的 ELK 是 6.0.0，要求 jdk 版本不低于 JDK8。</p><p>友情提示：安装 ELK 时，三个应用请选择统一的版本，避免出现一些莫名其妙的问题。例如：由于版本不统一，导致三个应用间的通讯异常。</p><p><a href="https://www.elastic.co/cn/downloads/elasticsearch" target="_blank" rel="noreferrer">https://www.elastic.co/cn/downloads/elasticsearch</a></p><h2 id="elasticsearch" tabindex="-1">Elasticsearch <a class="header-anchor" href="#elasticsearch" aria-label="Permalink to &quot;Elasticsearch&quot;">​</a></h2><p>安装步骤如下：</p><ol><li>elasticsearch 官方下载地址 (opens new window)下载所需版本包并解压到本地。</li><li>运行 bin/elasticsearch （Windows 上运行 bin\\elasticsearch.bat）</li><li>验证运行成功：linux 上可以执行 curl <a href="http://localhost:9200/" target="_blank" rel="noreferrer">http://localhost:9200/</a> ；windows 上可以用访问 REST 接口的方式来访问 <a href="http://localhost:9200/" target="_blank" rel="noreferrer">http://localhost:9200/</a></li></ol><p>说明</p><p>Linux 上可以执行下面的命令来下载压缩包：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>curl -L -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.tar.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Mac 上可以执行以下命令来进行安装：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>brew install elasticsearch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Windows 上可以选择 MSI 可执行安装程序，将应用安装到本地。</p><h2 id="logstash" tabindex="-1">Logstash <a class="header-anchor" href="#logstash" aria-label="Permalink to &quot;Logstash&quot;">​</a></h2><p>安装步骤如下：</p><p><a href="https://www.elastic.co/cn/downloads/logstash" target="_blank" rel="noreferrer">https://www.elastic.co/cn/downloads/logstash</a></p><p>在 logstash 官方下载地址 (opens new window)下载所需版本包并解压到本地。</p><p>添加一个 logstash.conf 文件，指定要使用的插件以及每个插件的设置。举个简单的例子：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>input { stdin { } }</span></span>
<span class="line"><span>output {</span></span>
<span class="line"><span>elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }</span></span>
<span class="line"><span>stdout { codec =&gt; rubydebug }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>运行 bin/logstash -f logstash.conf （Windows 上运行bin/logstash.bat -f logstash.conf）</p><h2 id="kibana" tabindex="-1">Kibana <a class="header-anchor" href="#kibana" aria-label="Permalink to &quot;Kibana&quot;">​</a></h2><p>安装步骤如下：</p><p><a href="https://www.elastic.co/cn/downloads/kibana" target="_blank" rel="noreferrer">https://www.elastic.co/cn/downloads/kibana</a></p><ol><li>在 kibana 官方下载地址 (opens new window)下载所需版本包并解压到本地。</li><li>修改 config/kibana.yml 配置文件，设置 elasticsearch.url 指向 Elasticsearch 实例。</li><li>运行 bin/kibana （Windows 上运行 bin\\kibana.bat）</li><li>在浏览器上访问 <a href="http://localhost:5601" target="_blank" rel="noreferrer">http://localhost:5601</a></li></ol><h2 id="安装-faq" tabindex="-1">安装 FAQ <a class="header-anchor" href="#安装-faq" aria-label="Permalink to &quot;安装 FAQ&quot;">​</a></h2><h3 id="elasticsearch-不允许以-root-权限来运行" tabindex="-1">elasticsearch 不允许以 root 权限来运行 <a class="header-anchor" href="#elasticsearch-不允许以-root-权限来运行" aria-label="Permalink to &quot;elasticsearch 不允许以 root 权限来运行&quot;">​</a></h3><p>**问题：**在 Linux 环境中，elasticsearch 不允许以 root 权限来运行。</p><p>如果以 root 身份运行 elasticsearch，会提示这样的错误：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>can not run elasticsearch as root</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>**解决方法：**使用非 root 权限账号运行 elasticsearch</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 创建用户组</span></span>
<span class="line"><span>groupadd elk</span></span>
<span class="line"><span># 创建新用户，-g elk 设置其用户组为 elk，-p elk 设置其密码为 elk</span></span>
<span class="line"><span>useradd elk -g elk -p elk</span></span>
<span class="line"><span># 更改 /opt 文件夹及内部文件的所属用户及组为 elk:elk</span></span>
<span class="line"><span>chown -R elk:elk /opt # 假设你的 elasticsearch 安装在 opt 目录下</span></span>
<span class="line"><span># 切换账号</span></span>
<span class="line"><span>su elk</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>vm.max_map_count 不低于 262144</p><p>问题：vm.max_map_count 表示虚拟内存大小，它是一个内核参数。elasticsearch 默认要求 vm.max_map_count 不低于 262144。</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>解决方法：</p><p>你可以执行以下命令，设置 vm.max_map_count ，但是重启后又会恢复为原值。</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sysctl -w vm.max_map_count=262144</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>持久性的做法是在 /etc/sysctl.conf 文件中修改 vm.max_map_count 参数：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>echo &quot;vm.max_map_count=262144&quot; &gt; /etc/sysctl.conf</span></span>
<span class="line"><span>sysctl -p</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>注意</p><p>如果运行环境为 docker 容器，可能会限制执行 sysctl 来修改内核参数。</p><p>这种情况下，你只能选择直接修改宿主机上的参数了。</p><h3 id="nofile-不低于-65536" tabindex="-1">nofile 不低于 65536 <a class="header-anchor" href="#nofile-不低于-65536" aria-label="Permalink to &quot;nofile 不低于 65536&quot;">​</a></h3><p>问题： nofile 表示进程允许打开的最大文件数。elasticsearch 进程要求可以打开的最大文件数不低于 65536。</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>解决方法：</p><p>在 /etc/security/limits.conf 文件中修改 nofile 参数：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>echo &quot;* soft nofile 65536&quot; &gt; /etc/security/limits.conf</span></span>
<span class="line"><span>echo &quot;* hard nofile 131072&quot; &gt; /etc/security/limits.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="nproc-不低于-2048" tabindex="-1">nproc 不低于 2048 <a class="header-anchor" href="#nproc-不低于-2048" aria-label="Permalink to &quot;nproc 不低于 2048&quot;">​</a></h2><p>问题： nproc 表示最大线程数。elasticsearch 要求最大线程数不低于 2048。</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>max number of threads [1024] for user [user] is too low, increase to at least [2048]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>解决方法：</p><p>在 /etc/security/limits.conf 文件中修改 nproc 参数：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>echo &quot;* soft nproc 2048&quot; &gt; /etc/security/limits.conf</span></span>
<span class="line"><span>echo &quot;* hard nproc 4096&quot; &gt; /etc/security/limits.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="kibana-no-default-index-pattern-warning" tabindex="-1">Kibana No Default Index Pattern Warning <a class="header-anchor" href="#kibana-no-default-index-pattern-warning" aria-label="Permalink to &quot;Kibana No Default Index Pattern Warning&quot;">​</a></h3><p>**问题：**安装 ELK 后，访问 kibana 页面时，提示以下错误信息：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Warning No default index pattern. You must select or create one to continue.</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>Unable to fetch mapping. Do you have indices matching the pattern?</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这就说明 logstash 没有把日志写入到 elasticsearch。</p><h3 id="解决方法" tabindex="-1">解决方法： <a class="header-anchor" href="#解决方法" aria-label="Permalink to &quot;解决方法：&quot;">​</a></h3><p>检查 logstash 与 elasticsearch 之间的通讯是否有问题，一般问题就出在这。</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>本人使用的 Java 日志方案为 slf4j + logback，所以这里以 logback 来讲解。</p><h2 id="java-应用输出日志到-elk" tabindex="-1">Java 应用输出日志到 ELK <a class="header-anchor" href="#java-应用输出日志到-elk" aria-label="Permalink to &quot;Java 应用输出日志到 ELK&quot;">​</a></h2><p>修改 logstash.conf 配置</p><p>首先，我们需要修改一下 logstash 服务端 logstash.conf 中的配置</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>input { </span></span>
<span class="line"><span>  # stdin { }</span></span>
<span class="line"><span>  tcp { </span></span>
<span class="line"><span>    # host:port就是上面appender中的 destination，</span></span>
<span class="line"><span>	# 这里其实把logstash作为服务，开启9250端口接收logback发出的消息 </span></span>
<span class="line"><span>    host =&gt; &quot;127.0.0.1&quot; port =&gt; 9250 mode =&gt; &quot;server&quot; tags =&gt; [&quot;tags&quot;] codec =&gt; json_lines </span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>output {</span></span>
<span class="line"><span>  elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }</span></span>
<span class="line"><span>  stdout { codec =&gt; rubydebug }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>说明</p><p>这个 input 中的配置其实是 logstash 服务端监听 9250 端口，接收传递来的日志数据。</p><p>然后，在 Java 应用的 pom.xml 中引入 jar 包：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>  &lt;groupId&gt;net.logstash.logback&lt;/groupId&gt;</span></span>
<span class="line"><span>  &lt;artifactId&gt;logstash-logback-encoder&lt;/artifactId&gt;</span></span>
<span class="line"><span>  &lt;version&gt;4.11&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>接着，在 logback.xml 中添加 appender</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;appender name=&quot;LOGSTASH&quot; class=&quot;net.logstash.logback.appender.LogstashTcpSocketAppender&quot;&gt;</span></span>
<span class="line"><span>  &lt;!--</span></span>
<span class="line"><span>  destination 是 logstash 服务的 host:port，</span></span>
<span class="line"><span>  相当于和 logstash 建立了管道，将日志数据定向传输到 logstash</span></span>
<span class="line"><span>  --&gt;</span></span>
<span class="line"><span>  &lt;destination&gt;127.0.0.1:9250&lt;/destination&gt;</span></span>
<span class="line"><span>  &lt;encoder charset=&quot;UTF-8&quot; class=&quot;net.logstash.logback.encoder.LogstashEncoder&quot;/&gt;</span></span>
<span class="line"><span>&lt;/appender&gt;</span></span>
<span class="line"><span>&lt;logger name=&quot;io.github.dunwu.spring&quot; level=&quot;TRACE&quot; additivity=&quot;false&quot;&gt;</span></span>
<span class="line"><span>  &lt;appender-ref ref=&quot;LOGSTASH&quot; /&gt;</span></span>
<span class="line"><span>&lt;/logger&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>大功告成，此后，io.github.dunwu.spring 包中的 TRACE 及以上级别的日志信息都会被定向输出到 logstash 服务。</p>`,102),i=[t];function r(o,c,h,d,u,b){return n(),s("div",null,i)}const v=a(p,[["render",r]]);export{g as __pageData,v as default};
