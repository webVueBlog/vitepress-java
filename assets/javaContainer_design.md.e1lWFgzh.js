import{_ as a,c as s,o as e,a8 as n}from"./chunks/framework.DDO5B0CJ.js";const t="/vitepress-java/assets/img_2.Dnu_ivIP.png",i="/vitepress-java/assets/img_3.D38QgN69.png",_=JSON.parse('{"title":"二、容器中的设计模式","description":"","frontmatter":{},"headers":[],"relativePath":"javaContainer/design.md","filePath":"javaContainer/design.md"}'),r={name:"javaContainer/design.md"},l=n('<h1 id="二、容器中的设计模式" tabindex="-1">二、容器中的设计模式 <a class="header-anchor" href="#二、容器中的设计模式" aria-label="Permalink to &quot;二、容器中的设计模式&quot;">​</a></h1><h2 id="迭代器模式" tabindex="-1">迭代器模式 <a class="header-anchor" href="#迭代器模式" aria-label="Permalink to &quot;迭代器模式&quot;">​</a></h2><p><img src="'+t+'" alt="img_2.png" loading="lazy"></p><p>Collection 继承了 Iterable 接口，其中的 iterator() 方法能够产生一个 Iterator 对象，通 过这个对象就可以迭代遍历 Collection 中的元素。</p><p>从 JDK 1.5 之后可以使用 foreach 方法来遍历实现了 Iterable 接口的聚合对象。</p><p><img src="'+i+`" alt="img_3.png" loading="lazy"></p><h2 id="适配器模式" tabindex="-1">适配器模式 <a class="header-anchor" href="#适配器模式" aria-label="Permalink to &quot;适配器模式&quot;">​</a></h2><p><code>java.util.Arrays#asList()</code> 可以把数组类型转换为 List 类型。</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>@SafeVarargs</span></span>
<span class="line"><span>public static &lt;T&gt; List&lt;T&gt; asList(T... a)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>应该注意的是 asList() 的参数为泛型的变长参数，不能使用基本类型数组作为参数， 只能使用相应的包装类型数组。</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Integer[] arr = {1, 2, 3};</span></span>
<span class="line"><span>List list = Arrays.asList(arr)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>也可以使用以下方式调用 asList()：</p><div class="language-angular2html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">angular2html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>List list = Arrays.asList(1, 2, 3);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,13),p=[l];function o(c,d,h,u,g,m){return e(),s("div",null,p)}const v=a(r,[["render",o]]);export{_ as __pageData,v as default};
